<?xml version="1.0" encoding="utf-8" ?>
<UserControl
  x:Class="Demo.UI.Settings.Views.UserControls.SettingsCard"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="using:Demo.UI.Settings.Views.UserControls"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:viewmodels="using:Demo.UI.Settings.ViewModels.UserControls"
  d:DataContext="{d:DesignInstance Type=viewmodels:SettingsCardViewModel}"
  mc:Ignorable="d">
  <!--
    Button: Represents a button control.
    HorizontalAlignment: Sets the horizontal alignment of the button.
    HorizontalContentAlignment: Sets the horizontal alignment of the button content.
    Command: Binds the button click command to the ViewModel's Command property.
  -->
  <Button
    HorizontalAlignment="Stretch"
    HorizontalContentAlignment="Stretch"
    Command="{x:Bind Command}">
    <Grid>
      <Grid.ColumnDefinitions>
        <!--
          ColumnDefinition: Defines the width of a column in a Grid.
          Width: Sets the width of the column.
        -->
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>

      <!--
        FontIcon: Represents an icon that uses a glyph from the specified font.
        Margin: Sets the margin around the FontIcon.
        Glyph: Binds the glyph to the ViewModel's Glyph property.
      -->
      <FontIcon Margin="25" Glyph="{x:Bind Glyph}" />

      <!--
        StackPanel: Arranges child elements into a single line that can be oriented horizontally or vertically.
        Grid.Column: Sets the column in which the StackPanel is placed.
        VerticalAlignment: Sets the vertical alignment of the StackPanel.
      -->
      <StackPanel Grid.Column="1" VerticalAlignment="Center">
        <!--
          TextBlock: Displays text.
          Style: Applies a predefined style to the TextBlock.
          Text: Binds the text content to the ViewModel's Title property.
        -->
        <TextBlock Style="{StaticResource BodyTextBlockStyle}" Text="{x:Bind Title}" />
        <!--
          TextBlock: Displays text.
          Style: Applies a predefined style to the TextBlock.
          Text: Binds the text content to the ViewModel's Description property.
        -->
        <TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text="{x:Bind Description}" />
      </StackPanel>

      <!--
        FontIcon: Represents an icon that uses a glyph from the specified font.
        Grid.Column: Sets the column in which the FontIcon is placed.
        Margin: Sets the margin around the FontIcon.
        Glyph: Sets the glyph to be displayed.
      -->
      <FontIcon
        Grid.Column="2"
        Margin="25"
        Glyph="&#xE970;" />
    </Grid>
  </Button>
</UserControl>
